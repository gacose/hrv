a<-c(5,10,3,10)
a
sum(a)
hist(a)
a<-c(5,10,3,10)
a<-c(5,10,3,10)
b<-seq(1...100)
b<-seq(1...100)
b<-seq(1...100)
b<-seq(1...100))
a<- read.csv('gc12.csv')
setwd("~/Tacogramas/hrv/Reportes")
a<- read.csv('../Datos/gc12.csv')
b<- read.csv('gc.csv',header = TRUE)
b<- read.csv('../Datos/gc.csv',header = TRUE)
c1 <- sd(b$a[0:382])
c2 <- sd(b$b)
c3 <- sd(b$c[0:392])
for(elemento in b){
# x<-!is.na(elemento);
# sd(elemento[x]);
elemento
}
for(elemento in 1:length(b)){
x<-!is.na(b[elemento])
y = b[elemento][x]
print(sd(y))
}
c<- read.csv('../Datos/ccp.csv',header = TRUE)
for(elemento in 1:length(c)){
x<-!is.na(c[elemento])
y = c[elemento][x]
print(sd(y))
}
d<- read.csv('../Datos/fg.csv',header = TRUE)
```
```{r}
for(elemento in 1:length(d)){
x<-!is.na(d[elemento])
y = d[elemento][x]
print(sd(y))
}
d<- read.csv('../Datos/fg.csv',header = TRUE)
for(elemento in 1:length(d)){
x<-!is.na(d[elemento])
y = d[elemento][x]
print(sd(y))
}
d<- read.csv('../Datos/fg.csv',header = TRUE)
e<- read.csv('../Datos/em.csv',header = TRUE)
f<-read.csv('../Datos/ach.csv',header = TRUE)
g<-read.csv('../Datos/sh.csv',header = TRUE)
h<-read.csv('../Datos/ra.csv',header = TRUE)
i<-read.csv('../Datos/no.csv',header = TRUE)
j<-read.csv('../Datos/jag.csv',header = TRUE)
k<-read.csv('../Datos/fsg.csv',header = TRUE)
l<-read.csv('../Datos/mv.csv',header = TRUE)
lista=c(c1,c2,c3)
lista=c(d,e,f,g,h,i,j,k,l)
for(elemento in 1:length(e)){
x<-!is.na(e[elemento])
y = e[elemento][x]
print(sd(y))
for(elemento in 1:length(e)){
x<-!is.na(e[elemento])
y = e[elemento][x]
print(sd(y))
}
`}
}
}
)
}}}}
d<- read.csv('../Datos/fg.csv',header = TRUE)
e<- read.csv('../Datos/em.csv',header = TRUE)
f<-read.csv('../Datos/ach.csv',header = TRUE)
g<-read.csv('../Datos/sh.csv',header = TRUE)
h<-read.csv('../Datos/ra.csv',header = TRUE)
i<-read.csv('../Datos/no.csv',header = TRUE)
j<-read.csv('../Datos/jag.csv',header = TRUE)
k<-read.csv('../Datos/fsg.csv',header = TRUE)
l<-read.csv('../Datos/mv.csv',header = TRUE)
lista=c(d,e,f,g,h,i,j,k,l)
for(s in length(lista)){
temp<-lista[s]
for(elemento in 1:length(temp)){
x<-!is.na(temp[elemento])
y = temp[elemento][x]
print(sd(y))
}}
.}
d<- read.csv('../Datos/fg.csv',header = TRUE)
e<- read.csv('../Datos/em.csv',header = TRUE)
f<-read.csv('../Datos/ach.csv',header = TRUE)
g<-read.csv('../Datos/sh.csv',header = TRUE)
h<-read.csv('../Datos/ra.csv',header = TRUE)
i<-read.csv('../Datos/no.csv',header = TRUE)
j<-read.csv('../Datos/jag.csv',header = TRUE)
k<-read.csv('../Datos/fsg.csv',header = TRUE)
l<-read.csv('../Datos/mv.csv',header = TRUE)
lista=c(d,e,f,g,h,i,j,k,l)
for(s in length(lista)){
temp<-lista[s]
for(elemento in 1:length(temp)){
x<-!is.na(temp[elemento])
y = temp[elemento][x]
print(sd(y))
}}
for(s in length(lista)){
temp<-lista[s]
for(elemento in 1:length(temp)){
x<-!is.na(temp[elemento])
y = temp[elemento][x]
print(sd(y))
}}
for(s in 0:length(lista)){
temp<-lista[s]
for(elemento in 0:length(temp)){
x<-!is.na(temp[elemento])
y = temp[elemento][x]
print(sd(y))
}}
lista=c([d],e,f,g,h,i,j,k,l)
d
d.names
names(d)
lista=data.frame(d,e,f,g,h,i,j,k,l)
lista=v(d,e,f,g,h,i,j,k,l)
lista=c(d,e,f,g,h,i,j,k,l)
install.packages("RHRV", dependencies = TRUE)
install.packages("RHRV", dependencies = TRUE)
'../Datos/mv.csv')
lista<-c('../Datos/fg.csv',
'../Datos/em.csv',
'../Datos/ach.csv',
'../Datos/sh.csv',
'../Datos/ra.csv',
'../Datos/no.csv',
'../Datos/jag.csv',
'../Datos/fsg.csv',
'../Datos/mv.csv')
procesaFile <- function(f) {
temp <- read.csv(f,header=TRUE)
for(elemento in 0:length(temp)){
x<-!is.na(temp[elemento])
y = temp[elemento][x]
print(sd(y))
}
}
result <- sapply(lista, procesaFile)
result <- sapply(lista, procesaFile)
sapply(lista, procesaFile)
sapply(lista, procesaFile)
procesaFile <- function(f) {
temp <- read.csv(f,header=TRUE)
for(elemento in 0:length(temp)){
x<-!is.na(temp[elemento])
y = temp[elemento][x]
salida[elemento]<- (sd(y))
}
}
sapply(lista, procesaFile)
procesaFile <- function(f) {
salida <- NULL
temp <- read.csv(f,header=TRUE)
for(elemento in 0:length(temp)){
x<-!is.na(temp[elemento])
y = temp[elemento][x]
salida[elemento]<- (sd(y))
}
}
sapply(lista, procesaFile)
procesaFile <- function(f) {
salida <- NULL
temp <- read.csv(f,header=TRUE)
for(elemento in 0:length(temp)){
x<-!is.na(temp[elemento])
y = temp[elemento][x]
salida[elemento]<- sd(y)
}
}
sapply(lista, procesaFile)
procesaFile <- function(f) {
salida <- NULL
temp <- read.csv(f,header=TRUE)
for(elemento in 0:length(temp)){
x<-!is.na(temp[elemento])
y = temp[elemento][x]
print( sd(y))
}
}
sapply(lista, procesaFile)
procesaFile <- function(f) {
salida <- NULL
temp <- read.csv(f,header=TRUE)
for(elemento in 0:length(temp)){
x<-!is.na(temp[elemento])
y = temp[elemento][x]
print( sd(y))
}
}
lista<-c('../Datos/fg.csv',
'../Datos/em.csv',
'../Datos/ach.csv',
'../Datos/sh.csv',
'../Datos/ra.csv',
'../Datos/no.csv',
'../Datos/jag.csv',
'../Datos/fsg.csv',
'../Datos/mv.csv')
sapply(lista, procesaFile)
library("RHRV")
setwd("~/Tacogramas/hrv")
data("example.beats")
data("example.beats")
data("example.beats")
hrv.data = CreateHRVData()
hrv.data = LoadBeatAscii(hrv.data, "example.beats")
hrv.data = SetVerbose(hrv.data, TRUE )
hrv.data = LoadBeatAscii(hrv.data, "example.beats")
hrv.data = FilterNIHR(hrv.data)
hrv.data = InterpolateNIHR (hrv.data, freqhr = 4)
PlotNIHR(hrv.data)
PlotHR(hrv.data)
RR = hrv.data$Beat$RR
hrv.data = CreateHRVData()
hrv.data = SetVerbose(hrv.data, TRUE )
hrv.data = LoadBeatAscii(hrv.data, "example2.beats")
hrv.data = FilterNIHR(hrv.data)
hrv.data = InterpolateNIHR (hrv.data, freqhr = 4)
PlotNIHR(hrv.data)
PlotHR(hrv.data)
RR = hrv.data$Beat$RR
names(hrv.data$Beat)
+ interval = 7.8125)
(hrv.data, size = 300,interval = 7.8125)
hrv.data = CreateTimeAnalysis(hrv.data, size = 300,interval = 7.8125)
hrv.data = CreateHRVData()
hrv.data = SetVerbose(hrv.data, TRUE )
hrv.data = LoadBeatAscii(hrv.data, "Datos/ach.csv")
datos<-read.csv(Datos/ach.csv)
datos<-read.csv("Datos/ach.csv", TRUE )
lectura<-datos$a[!is.na()]
x<-!is.na(c[elemento])
x<-!is.na(datos$a)
y = datos$a[x]
beats[0]<-y[0]
beats<-c()
beats[0]<-y[0]
beats[0]<-y[0]
beats<-c(y[0])
beats<-c(y[1])
beats<-c(y[1])
for(i in 2:length(y)){
beats[i]<-beats[i-1]+y[2]
}
hrv.data = LoadBeatAscii(hrv.data, beats)
beats<-c(y[1]/1000)
for(i in 2:length(y)){
beats[i]<-beats[i-1]+y[2]/1000
}
hrv.data = SetVerbose(hrv.data, TRUE )
hrv.data = LoadBeatAscii(hrv.data, beats)
hrv.data = LoadBeatAscii(hrv.data, table(beats))
write.csv("Datos/ach-beats.csv",beats)
write.csv(beats,"Datos/ach-beats.csv")
as.data.frame(beats)
columna<-as.data.frame(beats)
write.csv(beats,"Datos/ach-beats.csv")
write.csv(columna,"Datos/ach-beats.csv")
write.csv(columna,"Datos/ach-beats.csv",row.names = FALSE)
hrv.data = SetVerbose(hrv.data, TRUE )
hrv.data = LoadBeatAscii(hrv.data,"Datos/ach-beats")
setwd("~/Tacogramas/hrv/Datos")
setwd("~/Tacogramas/hrv")
hrv.data = LoadBeatAscii(hrv.data,"ach-beats",RecordPath = "Datos")
hrv.data = LoadBeatAscii(hrv.data,"ach-beats.csv",RecordPath = "Datos")
hrv.data = InterpolateNIHR (hrv.data, freqhr = 4)
PlotNIHR(hrv.data)
PlotHR(hrv.data)
hrv.data = LoadBeatAscii(hrv.data,"ach-beats")
hrv.data
plot(hrv.data$HR)
hrv.data = InterpolateNIHR(hrv.data, freqhr = 4)
hrv.data = FilterNIHR(hrv.data)
hrv.data
RR = hrv.data$Beat$RR
RR
RR = hrv.data$Beat
RR
hrv.data = CreateTimeAnalysis(hrv.data, size = 300,interval = 7.8125)
View(columna)
hrv.data$RR = y
rr <- y/1000
hrv.data$RR = rr
PlotNIHR(hrv.data)
RR = hrv.data$Beat$RR
hrv.data = CreateTimeAnalysis(hrv.data, size = 300,interval = 7.8125)
hrv.data = InterpolateNIHR(hrv.data, freqhr = 4)
rr <- y/1000
beats<-c(y[1]/1000)
for(i in 2:length(y)){
beats[i]<-beats[i-1]+y[2]/1000
}
plot(beats,rr)
fft(rr)
plotffr(abs(rr))
plot(fft(abs(rr)))
LoadBeatRR(HRVData, y, RecordPath=".", scale = 1)
LoadBeatRR(hrv.data, y, RecordPath=".", scale = 1)
LoadBeatRR(hrv.data, "ach-beats.csv",RecordPath = "Datos", scale = 1)
hrv.data<-LoadBeatRR(hrv.data, "ach-beats.csv",RecordPath = "Datos", scale = 1)
hrv.data = CreateFreqAnalysis(hrv.data)
hrv.data$FreqAnalysis
hrv.data = CalculatePowerBand( hrv.data , indexFreqAnalysis= 1, size = 300, shift = 30, sizesp = 2048, type = "fourier",ULFmin = 0, ULFmax = 0.03, VLFmin = 0.03, VLFmax = 0.05,LFmin = 0.05, LFmax = 0.15, HFmin = 0.15, HFmax = 0.4 )
